package frc.robot;

import edu.wpi.first.wpilibj.TimedRobot;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

public class Robot extends TimedRobot {

  //tres motores en la derecha, 0-2
  WPI_TalonSRX motord1 = new WPI_TalonSRX(0);
  WPI_TalonSRX motord2 = new WPI_TalonSRX(1);
  WPI_TalonSRX motord3 = new WPI_TalonSRX(2);
  SpeedControllerGroup motoresDerecha = new SpeedControllerGroup(motord1, motord2, motord3);

  //tres motores en la izquierda, 3-5
  WPI_TalonSRX motori1 = new WPI_TalonSRX(3);
  WPI_TalonSRX motori2 = new WPI_TalonSRX(4);
  WPI_TalonSRX motori3 = new WPI_TalonSRX(5);
  SpeedControllerGroup motoresIzquierda = new SpeedControllerGroup(motori1, motori2, motori3);

  DoubleSolenoid piston = new DoubleSolenoid(0, 2);
  Compressor compresor = new Compressor();

  //motores del CHASSIS!!
  DifferentialDrive chasis = new DifferentialDrive(motoresIzquierda, motoresDerecha);

  //controles para los human players, el 1 es para chasis y el 2 para el intake
  XboxController control1 = new XboxController(0);
  XboxController control2 = new XboxController(1);

  @Override
  public void robotInit() {}

  @Override
  public void robotPeriodic() {}

  @Override
  public void autonomousInit() {}

  @Override
  public void autonomousPeriodic() {
    
    double time = Timer.getFPGATimestamp();

    if (time < 5) {
      chasis.arcadeDrive(0.3, 0);
    }else{ 
      chasis.arcadeDrive(0, 0);
    }
  }

  @Override
  public void teleopInit() {}

  @Override
  public void teleopPeriodic() {

    //manejo para ir adelante
    if(control1.getRawButton(1)){
      chasis.arcadeDrive(0.5, 0);;
    }else{
      chasis.arcadeDrive(0, 0);
    }

    //manejo para ir atrás
    if(control1.getRawButton(2)){
      chasis.arcadeDrive(-0.5, 0);
    }else{
      chasis.arcadeDrive(0, 0);
    }

    //si se presiona el boton, saca el pistón todito, de lo contrario se esconde
    if(control2.getRawButton(1)){
      piston.set(DoubleSolenoid.Value.kForward);
    }else{
      piston.set(DoubleSolenoid.Value.kReverse);
    }
  }

  @Override
  public void disabledInit() {}

  @Override
  public void disabledPeriodic() {}

  @Override
  public void testInit() {}

  @Override
  public void testPeriodic() {}
}